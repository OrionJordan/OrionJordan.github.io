[
  {
    "objectID": "qmd/integral/intro.html",
    "href": "qmd/integral/intro.html",
    "title": "Integration Bee",
    "section": "",
    "text": "This section is all about my practice for the UNT 2024 Integration Bee. This contest contains only indefinite integrals."
  },
  {
    "objectID": "qmd/graph/GraphTheory.html",
    "href": "qmd/graph/GraphTheory.html",
    "title": "Graph Theory",
    "section": "",
    "text": "Graph Theory is the study of Graphs (Shocking) and their applications. The subject doesn’t require any real prerequisites, except some basic knowledge of naive set theory. Many problems in math and computer science can be modeled with graphs, despite seeming on the surface entirely unrelated. In fact, even chemist have begun to use graphs as a way to model molecules!\n\nTable of Contents\n0 - Graph Theory\n  0.1 - Preface\n  0.2 - Table of Contents\n1 - Introduction\n  1.1 - Graphs\n    1.1.1 - Definition\n    1.1.2 - Common Families of Graphs\n  1.2 - Vertex Degrees\n  1.3 - Paths, Cycles, Trails\n2 - Structure and Representation\n3 - Matching\n4 - Subgraphs\n5 - Trees\n6 - Connectivity\n7 - Planarity\n8 - Coloring\n9 - Flows\n10 - Hamilton Cycles"
  },
  {
    "objectID": "qmd/integral/simple/trivial.html",
    "href": "qmd/integral/simple/trivial.html",
    "title": "Basics",
    "section": "",
    "text": "Integration is the inverse of the differentiation. If f(x)"
  },
  {
    "objectID": "qmd/basics/sets.html",
    "href": "qmd/basics/sets.html",
    "title": "Sets",
    "section": "",
    "text": "A set is a collection of elements, usually denoted with a capital letter A,B,\\cdots,Z. Important groups of numbers are denoted in Blackboard bold font; for example the set \\mathbb{N}, which refers to the natural numbers. Sets are given the following notation\nA set S containing the numbers 1,2 and 3 as elements is wrote S = \\{1,2,3\\}. The order in which the elements are listed is irrelevant, S = \\{1,2,3\\} = \\{3,2,1\\}. This notation becomes tedious however when attempting to write a set with a large amount of elements. This is where set builder notation comes in. Set builder notation defines a set in the form\nS = \\{\\text{A function of}\\: x \\:|\\: \\text{A predicate of}\\: x\\}\nFor example, the set of all square numbers would be\nS = \\{ x^2 \\:|\\: x \\in \\mathbb{N}\\} = \\{1,4,9,\\ldots\\}\nThere are very commonly used sets we assume the existence of, and denote with special characters to save time\nDefinition: Given any set A, the of A, denoted \\mathcal{P}(\\mathbb{A}) is the set of all subsets of A; i.e.\n\\mathcal{P}(A) = \\{B | B \\subseteq A\\}\nFor example, if A = \\{a,b\\}, then \\mathcal{P}(A) = \\{\\{\\},\\{a\\},\\{b\\},\\{a,b\\}\\} Notice that \\varnothing and A are always elements of \\mathcal{P}(A). Also note a \\not\\in \\mathcal{P}(A), but \\{a\\} \\in \\mathcal{P}(A)."
  },
  {
    "objectID": "qmd/basics/sets.html#footnotes",
    "href": "qmd/basics/sets.html#footnotes",
    "title": "Sets",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe notation \\mathbb{Z} for integers comes from the German word Zahlen, which means integer.↩︎"
  },
  {
    "objectID": "qmd/basics/sets1.html",
    "href": "qmd/basics/sets1.html",
    "title": "Sets",
    "section": "",
    "text": "A set is a collection of elements, usually denoted with a capital letter A,B,\\cdots,Z. Important groups of numbers are denoted in Blackboard bold font; for example the set \\mathbb{N}, which refers to the natural numbers. Sets are given the following notation\nA set S containing the numbers 1,2 and 3 as elements is wrote S = \\{1,2,3\\}. The order in which the elements are listed is irrelevant, S = \\{1,2,3\\} = \\{3,2,1\\}. This notation becomes tedious however when attempting to write a set with a large amount of elements. This is where set builder notation comes in. Set builder notation defines a set in the form\nS = \\{\\text{A function of}\\: x \\:|\\: \\text{A predicate of}\\: x\\}\nFor example, the set of all square numbers would be\nS = \\{ x^2 \\:|\\: x \\in \\mathbb{N}\\} = \\{1,4,9,\\ldots\\}\nThere are very commonly used sets we assume the existence of, and denote with special characters to save time\nDefinition: Given any set A, the of A, denoted \\mathcal{P}(\\mathbb{A}) is the set of all subsets of A; i.e.\n\\mathcal{P}(A) = \\{B | B \\subseteq A\\}\nFor example, if A = \\{a,b\\}, then \\mathcal{P}(A) = \\{\\{\\},\\{a\\},\\{b\\},\\{a,b\\}\\} Notice that \\varnothing and A are always elements of \\mathcal{P}(A). Also note a \\not\\in \\mathcal{P}(A), but \\{a\\} \\in \\mathcal{P}(A)."
  },
  {
    "objectID": "qmd/basics/sets1.html#footnotes",
    "href": "qmd/basics/sets1.html#footnotes",
    "title": "Sets",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe notation \\mathbb{Z} for integers comes from the German word Zahlen, which means integer.↩︎"
  },
  {
    "objectID": "qmd/basics/sets2.html",
    "href": "qmd/basics/sets2.html",
    "title": "Sets",
    "section": "",
    "text": "A set is a collection of elements, usually denoted with a capital letter A,B,\\cdots,Z. Important groups of numbers are denoted in Blackboard bold font; for example the set \\mathbb{N}, which refers to the natural numbers. Sets are given the following notation\nA set S containing the numbers 1,2 and 3 as elements is wrote S = \\{1,2,3\\}. The order in which the elements are listed is irrelevant, S = \\{1,2,3\\} = \\{3,2,1\\}. This notation becomes tedious however when attempting to write a set with a large amount of elements. This is where set builder notation comes in. Set builder notation defines a set in the form\nS = \\{\\text{A function of}\\: x \\:|\\: \\text{A predicate of}\\: x\\}\nFor example, the set of all square numbers would be\nS = \\{ x^2 \\:|\\: x \\in \\mathbb{N}\\} = \\{1,4,9,\\ldots\\}\nThere are very commonly used sets we assume the existence of, and denote with special characters to save time\nDefinition: Given any set A, the of A, denoted \\mathcal{P}(\\mathbb{A}) is the set of all subsets of A; i.e.\n\\mathcal{P}(A) = \\{B | B \\subseteq A\\}\nFor example, if A = \\{a,b\\}, then \\mathcal{P}(A) = \\{\\{\\},\\{a\\},\\{b\\},\\{a,b\\}\\} Notice that \\varnothing and A are always elements of \\mathcal{P}(A). Also note a \\not\\in \\mathcal{P}(A), but \\{a\\} \\in \\mathcal{P}(A)."
  },
  {
    "objectID": "qmd/basics/sets2.html#footnotes",
    "href": "qmd/basics/sets2.html#footnotes",
    "title": "Sets",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe notation \\mathbb{Z} for integers comes from the German word Zahlen, which means integer.↩︎"
  },
  {
    "objectID": "qmd/graph/intro/graphs.html",
    "href": "qmd/graph/intro/graphs.html",
    "title": "Graphs",
    "section": "",
    "text": "This section covers the definition of a graph, and common families of graphs."
  },
  {
    "objectID": "qmd/graph/intro/graphs.html#alternate-definition",
    "href": "qmd/graph/intro/graphs.html#alternate-definition",
    "title": "Graphs",
    "section": "Alternate definition",
    "text": "Alternate definition\nA more rigourous definition of a graph G will include an incidence function \\psi_G that connects vertices to edges.\n\n\n\n\n\n\nDefinition\n\n\n\nA graph G is an ordered pair (V(G),E(G)) where V(G) is a set of vertices and E(G) is a set, disjoint from V(G), of edges, along with an incidence function \\psi_G that associates each edge in E(G) an unordered pair of vertices in V(G).\n\n\nAn edge e is said to join its endpoints u,v if \\psi_G(e) = \\{u,v\\}.\n\n\n\n\n\n\nExample (Rigourous Graph)\n\n\n\n\n\nAn example of a rigourous graph G is\n\nG = (V(G),E(G))\n\nwhere\n\nV(G) = \\{a,b,c,d,e\\}\\\\\nE(G) = \\{e_1,e_2,e_3,e_4,e_5,e_6,e_7,e_8\\}\n\nand \\psi_G conncects\n\n\\psi_G(e_1) = \\{a,b\\}, \\psi_G(e_2) = \\{a,a\\}, \\psi_G(e_3) = \\{a,c\\}, \\psi_G(e_4) = \\{b,e\\}\\\\\n\\psi_G(e_5) = \\{b,a\\}, \\psi_G(e_6) = \\{c,b\\}, \\psi_G(e_7) = \\{d,d\\}, \\psi_G(e_8) = \\{c,e\\}"
  },
  {
    "objectID": "qmd/graph/intro/graphs.html#complete-graphs",
    "href": "qmd/graph/intro/graphs.html#complete-graphs",
    "title": "Graphs",
    "section": "Complete Graphs",
    "text": "Complete Graphs\n\n\n\n\n\n\nDefinition\n\n\n\nA complete graph is a simple graph where there exist an edge between every pair of distinct vertices. A complete graph with n vertices is notated K_n.\n\n\n(Insert picture of graphs K1 through K5)\n\n\n\n\n\n\nTheorem\n\n\n\nA complete graph K_n contains \\binom{n}{2} edges.\n\n\n\n\n\n\n\n\nProof\n\n\n\n\n\nThe graph K_n has an edge between every pair of distinct vertices. Because order doesn’t affect edges (e = uv is equivalent to e = vu), the number of edges is analougous to n choose 2, \\binom{n}{2}."
  },
  {
    "objectID": "qmd/graph/intro/graphs.html#bipartite-graphs",
    "href": "qmd/graph/intro/graphs.html#bipartite-graphs",
    "title": "Graphs",
    "section": "Bipartite Graphs",
    "text": "Bipartite Graphs\n\n\n\n\n\n\nDefinition\n\n\n\nA bipartite graph G is a simple graph whose vertex set can be partitioned into two subsets U and V, such that every edge in G has one endpoint in U, and one edpoint in V.\n\n\n(Insert picture of a few bipartite graphs)\n\n\n\n\n\n\nProposition\n\n\n\nA bipartite graph cannot contain any loops.\n\n\n\n\n\n\n\n\nProof\n\n\n\n\n\nIf an edge was loop, it would connect the same vertex to both endpoints, which contradicts our definition of a bipartite graph.\n\n\n\n\n\n\n\n\n\nDefinition\n\n\n\nA complete bipartite graph G is a simple bipartite graph such that every vertex in one of the bipartition subsets is joined to every other vertex in the other bipartite subset. A complete bipartite graph is notated K_{m,n} where m is the number of vertices in one of the graphs bipartite set, and n is the number of vertices in the other.\n\n\n(Example of a complete bipartite graph)"
  },
  {
    "objectID": "qmd/graph/intro/graphs.html#regular-graphs",
    "href": "qmd/graph/intro/graphs.html#regular-graphs",
    "title": "Graphs",
    "section": "Regular Graphs",
    "text": "Regular Graphs\nTo look at regular graphs, we first have to establish the degree of a vertex.\n\n\n\n\n\n\nDefinition\n\n\n\nThe degree of a vertex v is a positive integer equal to the number of vertices in the neighborhood of v.\n\n\n\n\n\n\n\n\nDefinition\n\n\n\nA k-regular graph is a graph where each vertex has k other vertices in it’s neighborhood.\n\n\n\n\n\n\n\n\nExample\n\n\n\n\n\n\n\n\n\n\n\n\nFor example, the Petersen graph is 3-regular, as each vertex in the graph has three other vertices in it’s neighborhood."
  },
  {
    "objectID": "qmd/graph/trees/Matchings.html",
    "href": "qmd/graph/trees/Matchings.html",
    "title": "Matchings",
    "section": "",
    "text": "A Matching is a name given to a collection of edges in a graph G with no common vertex.\n\n\n\n\n\n\nDefinition\n\n\n\nGiven a graph G and a matching M\nAn alternating path is a path that alternates between edges in M and edges outside of M.\nAn augmented Path is an alternating path that starts and ends on vertices not included in the matching.\n\n\nNote that is (G,M) has an augmented path, than M is not a maximum matching, as flipping each edge to be in M if it wasn’t before, or out of M if it was produces a matching with more edges.\n\n\n\n\n\n\nDefinition\n\n\n\nA perfect matching is a matching where every vertex is in the matching.\n\n\n\n\n\n\n\n\nTheorem\n\n\n\nA matching M in a graph G is maximum if and only if there are no augementing paths in G\n\n\n\n\n\n\n\n\nProof\n\n\n\nWe already know that if G,M has an augmented path, then M is not maximum. All we need to prove is thay if there are no augmented paths, than M is maximum. If we assume M is not maximum, there exist a matching M^\\prime such that |M^\\prime| &gt; |M|.\nConsider the graph with a vertex set of V(G) and an edge set M \\Delta M^\\prime. Every vertex in this graph has a degree less than or equal to 2. Any connected componet of this new graph will be either a path or a cycle."
  }
]